1:
import numpy as np
x = np.random.random((10,1))
print(x)
print("Mean : ",np.mean(x))

output

[[0.47920822]
 [0.2097713 ]
 [0.19317424]
 [0.57017942]
 [0.19258909]
 [0.49387712]
 [0.11471847]
 [0.27336033]
 [0.18305253]
 [0.19866492]]
Mean :  0.29085956436849036

2:
import numpy as np
x = np.random.random((20,1))
print(x)
print("Standard Deviation : ",np.std(x))
print("Variance : ",np.var(x))

output

[[0.28192385]
 [0.68136008]
 [0.87349397]
 [0.07776898]
 [0.3368794 ]
 [0.36413143]
 [0.25122519]
 [0.26037871]
 [0.77696368]
 [0.3083908 ]
 [0.18744788]
 [0.79051573]
 [0.64536899]
 [0.03627392]
 [0.31957421]
 [0.11071365]
 [0.77013129]
 [0.84050519]
 [0.48448006]
 [0.10014501]]
Standard Deviation :  0.27518847816429687
Variance :  0.07572869851438169

3:
import numpy as np
A = np.random.random((10,20))
B = np.random.random((20,25))
C = np.matmul(A,B)
print('Matrix multiplication : ',C)
print('Shape of matrix : ',C.shape)
print('Sum of elements : ',np.sum(C))

output

Matrix multiplication :  [[4.10997163 4.80112863 6.57162821 4.69632004 
4.34527729 4.35995913
  5.27639512 3.43456975 4.65977589 5.14485279 3.96090887 4.96805983
  4.64770583 5.80431717 4.45151104 5.18648146 4.54765132 4.54926253
  5.96140061 3.66338826 4.0530697  5.21221913 5.35012274 4.52791049
  4.8734278 ]
 [2.67588824 3.67279928 4.30826321 2.95696204 3.59114992 3.90763156
  4.32513715 3.41920512 3.30565142 3.83485422 4.31593456 5.00241185
  2.88801939 4.37942247 4.01626471 3.6658577  3.84194367 3.73996041
  4.47863915 3.54453538 4.34865684 3.23005658 4.29654192 2.83859305
  4.42314966]
 [3.13524519 3.94591966 5.62961042 2.70906288 4.16786761 4.5901252
  4.55931335 4.40080505 4.22439341 3.99657816 4.22985954 4.9353155
  2.85535443 4.39361955 3.76520114 4.72844996 3.53798799 3.9587636
  5.65092526 4.10431349 3.93692098 3.97585155 4.48447977 3.18438093
  3.73217287]
 [3.68415855 5.0499525  6.54038194 4.35241531 4.840479   5.51471327
  6.57873546 5.25019868 5.14979746 4.75758568 5.63537989 6.60594389
  4.92807011 6.15061641 5.62576776 5.46612459 5.89274651 5.47718748
  6.72161297 5.24716404 5.77830572 5.69390874 5.9767048  4.5711407
  5.43402811]
 [2.84680614 3.89903139 5.47155958 3.36173238 4.5942843  4.25920655
  4.94931129 3.98901352 3.85132451 4.72062876 4.59817051 5.37696501
  4.49197683 4.48911733 4.33264498 4.45390401 4.21139593 4.58737985
  5.16764781 3.62094759 4.42961376 4.35449127 5.19113747 3.15236544
  4.41412275]
 [4.10077926 5.03085829 6.90857409 4.45450414 5.08651238 6.18734555
  5.54170031 4.47612035 5.14397716 6.0331753  5.49463841 6.64779285
  4.66175564 6.5337023  5.20004319 6.15593921 4.35890658 5.02755197
  6.77236916 4.09256477 4.90404997 5.56447809 5.76596648 4.25094793
  5.53931682]
 [4.62521546 5.4591926  7.21770733 4.16475495 5.38259575 5.78626535
  5.4425363  5.01843689 5.18096859 5.87211265 5.47136335 6.3094175
  4.29019544 6.03982768 5.47504162 6.29927903 4.50012329 4.85641686
  6.84906245 5.07712131 5.19156365 5.33171163 6.37153995 4.72873913
  5.22525285]
 [4.83588426 5.61759233 7.25029786 4.71083651 5.4242047  5.65666764
  6.497264   5.05928171 5.51459887 6.11301486 5.88589421 6.87778731
  4.61194641 7.13458981 6.07901673 5.74929359 5.10535268 5.69679227
  6.57027296 4.75319029 5.63437272 5.43141123 6.26422399 5.04999476
  6.10296871]
 [4.54169435 5.75435152 7.14109972 3.95915029 5.76986854 6.02781907
  5.59725486 5.29713525 5.54582367 5.89654295 5.49760318 6.61904714
  4.33286804 5.98894085 5.17802583 5.99281053 4.80556569 4.97682253
  7.26543178 5.20966658 5.01412287 5.33661801 6.57807948 4.72004104
  4.87697431]
 [3.48578686 5.12268988 5.63553855 3.82117347 4.25561556 4.82270446
  4.43263524 4.57131174 5.14158463 4.4964024  5.23402076 5.57721841
  3.61769245 5.30139372 4.42210717 4.76245373 3.67211954 4.66496042
  5.76865805 4.08842924 4.58403347 5.38389088 4.69703553 3.90627811
  4.85807772]]
Shape of matrix :  (10, 25)
Sum of elements :  1230.7091930602232

4:
import numpy as np
A = np.random.rand(10,1)
print(A)
def func(x):
    return (1 / (1 + np.exp(-x)))
r = np.apply_along_axis(func, 0, A)
print('Result : ',r)

output

[[0.28372005]
 [0.41793536]
 [0.06535599]
 [0.08917332]
 [0.02723156]
 [0.8615865 ]
 [0.85941698]
 [0.04560323]
 [0.70375713]
 [0.76557145]]
Result :  [[0.57045801]
 [0.60298909]
 [0.51633318]
 [0.52227857]
 [0.50680747]
 [0.70299201]
 [0.70253883]
 [0.51139883]
 [0.66902025]
 [0.68256213]]

